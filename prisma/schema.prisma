generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SELLER
}

model Product {
  id                 Int             @id @default(autoincrement())
  productTitle       String
  productDescription String
  productType        String // Can be "new", "used", etc.
  price              Float
  productRating      Float? // Can be between 0 and 5
  productQuantity    Int // Can be negative if the product is out of stock
  stockQuantity      Int
  allowCampaign      Boolean
  isTrending         Boolean
  productShortVideo  String? // URL or link to the short video
  productsImages     ProductImage[] // Relation to ProductImage model
  productModels      ProductModel[] // Relation to ProductModel
  specifications     Specification[] // Relation to Specification model
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  imageUrl  String // URL or file path for the product image
  product   Product @relation(fields: [productId], references: [id])
}

model ProductModel {
  id         Int     @id @default(autoincrement())
  productId  Int
  modelImage String // URL or file path for the model image
  product    Product @relation(fields: [productId], references: [id])
}

model Specification {
  id        Int     @id @default(autoincrement())
  productId Int
  brand     String
  value     String // Can store various specification values
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id                     Int       @id @default(autoincrement())
  name                   String
  email                  String    @unique
  userName               String?   @unique
  password               String
  profileImage           String?
  coverImage             String?
  bio                    String?
  ssn                    String?
  phoneNumber            String?
  dateOfBirth            DateTime?
  gender                 String?
  address                String?
  defaultBillingAddress  Int?
  defaultShippingAddress Int?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  role                   Role      @default(SELLER)
  userAgentInfo          Json?
  ipAddress              String?
  location               Json?
  // Address                Address[]
  // cartItems              CartItem[]
  // orders                 Order[]
  // reviews                Review[]

  @@map("users")
}
